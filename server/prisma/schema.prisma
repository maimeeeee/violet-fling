datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Task {
  id    Int     @id @default(autoincrement())
  label String
  done  Boolean @default(false)
}


model FileInfo {
  id          Int        @id @default(autoincrement())
  contentname String
  deleted     Boolean    @default(false)
  manage      FileManage @relation(fields: [manageid],references: [id])
  manageid    Int
}

model FileManage{
  id       Int           @id @default(autoincrement())
  parentid Int           @default(0)
  position Int
  depth    Int           @default(0)
  fileinfo FileInfo[]
}

model Project {
  projectId   String   @id @default(uuid())
  projectName String
  createdAt   DateTime @default(now())
  desks       Desk[]
}

model Desk{
  deskId      String   @id @default(uuid())
  deskName    String
  createdAt   DateTime @default(now())
  project     Project  @relation(fields: [projectId],references: [projectId])
  projectId   String
  works       Work[]
}

model Work {
  workId      String   @id @default(uuid())
  workName    String
  createdAt   DateTime @default(now())
  path        String
  desk        Desk     @relation(fields: [deskId] , references: [deskId])
  deskId      String
  revisions   Revision[]
}

model Revision {
  revisionId  String   @id @default(uuid())
  createdAt   DateTime @default(now())
  work        Work     @relation(fields: [workId],references: [workId])
  workId      String
  editions    Edition[]
  message     Message[]
}

model Edition {
  editionId   String   @id @default(uuid())
  createdAt   DateTime @default(now())
  revision    Revision @relation(fields: [revisionId], references:[revisionId])
  revisionId  String
}

model Message {
  messageId   String   @id @default(uuid())
  content     String   @db.Text
  createdAt   DateTime @default(now())
  userName    String
  revision    Revision @relation(fields: [revisionId], references:[revisionId])
  revisionId  String
  reply       Reply[]
}

model Reply {
  replyId     String   @id @default(uuid())
  content     String   @db.Text
  createdAt   DateTime @default(now())
  userName    String
  message     Message  @relation(fields: [messageId],references:[messageId])
  messageId   String
}

model SignedUser{
  id          Int      @id @default(autoincrement())
  userId      String   @default(uuid())
  name        String
}

